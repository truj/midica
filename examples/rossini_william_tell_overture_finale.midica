// This example file provides the finale of the "William Tell Overture" by Gioachino Rossini.
// It comprises the measures 226 until the end (measure 477).
// 
// However the measure naming here (in function names and code comments) begins with number 1.
// So you have to add 225 to get the original measure number.
// 
// This file assumes standard program configuration:
// - Note System:       International: c, d, e, ... (lower case)
// - Half Tone Symbols: # / b (c#, cb, d#, db, ...)
// - Octave Naming:     +n/-n
// - Syntax:            Mixed Case Syntax
// 
// Function naming conventions used in this example file:
// - Functions related to a certain measure start with 'm', followed by the measure number.
//   If a measure is reused, the measure number relates to the measure where it's first called.
// - Functions starting with 'i_' contain an instrument switch.
// - Functions starting with 'd_all_' switch all channels to a certain duration mode (staccato or legato)
// - Functions starting with 'v_all_' switch all channels to a certain velocity mode (piano, forte, ...)
// 
// Pattern naming conventions used in this example file:
// - Patterns for normal channels (not percussion)...
//   - start with p
//   - followed by a description of their content where the following characters are used:
//     - 2=half note; 4=4th note; 8=8th note; s=16th note
//     - tr16 = triller with 16th notes; tr32 = triller with 32th notes
// - Patterns for the percussion channel...
//   - start with perc
//   - end with a number (the number of the measure where they occur for the first time)


META
	copyright  (c) Mozilla Public License, v. 2.0, author: Jan Trukenm√ºller
	title      William Tell Ouverture - Finale
	composer   Gioachino Rossini
END

////////////////////////////
// define constants
////////////////////////////

CONST $stac        = (d=50%)
CONST $leg         = (d=100%)
CONST $pp          = (v=33)    // pianissimo
CONST $p           = (v=49)    // piano
CONST $p_marcato   = (v=58)    // piano with accent
CONST $f           = (v=96)    // forte
CONST $ff          = (v=112)   // fortissimo
CONST $sf          = (v=120)   // sforzato
CONST $sf_accent   = (v=125)   // sforzato with accent
CONST $tutta_forza = (v=127)   // tutta forza

///////////////////////////////////////
// init channels with instruments
///////////////////////////////////////

INSTRUMENTS
	0   PICCOLO        Piccolo
	1   FLUTE          Flute
	2   OBOE           Oboe
	3   CLARINET       Clarinet in A
	4   BASSOON        Bassoon
	5   FRENCH_HORN    Horn in G
	6   ENGLISH_HORN   Horn in E
	7   TRUMPET        Trumpet in E
	8   TROMBONE       Trombone
	9   STANDARD       Triangle, Bass Drum, Cymbal
	10  TIMPANI        Timpani
	11  VIOLIN         Violin I
	12  VIOLIN         Violin II
	13  VIOLA          Viola
	14  CELLO          Violoncello
	15  CONTRABASS     Double Bass
END

///////////////////////////////////////
// define chord for percussion
///////////////////////////////////////

CHORD perc_all = to / bd2 / cc2

/////////////////////////////////
// start the actual sequence
/////////////////////////////////

// set key signature, time signature and tempo
*  key    e/maj
*  time   2/4
*  tempo  152

// init channel defaults
CALL  d_all_staccato
CALL  v_all_ff

// measure 1-4
7: | b:p_intro  |  b:8 g# e g#  |  b g# b e+  |

// m. 5-8
*
6: | e/g#:p_intro  |  e/g#:8 b-/f# g#-/e b-/f#  |  e/g# g#/b f#/a e/g# |
7: | b:8 g# e g#   |  b g# b  e+                |  b:p_intro           |

// m. 9-10
*
5: | b-/b:p_intro             |
6: | b-/f#:8 e/g# b-/f# f#/a  |  e/g# b-/f# g#-/e e/g#  |
7: | b:p_intro                |

// m. 11-14
*
{ q=4
	5:  | b-/b:p8ss88  |
	6:  | b-/f#:p8ss88 |
	7:  | b:p8ss88     |
	10: | b-2:p8ss88   |
}

// m. 15-17
*
CALL  v_all_sf
CALL  d_all_legato
4:  | b-2/d#:1+8
5:  | b-/b:1+8
6:  | d#/f#:1+8
7:  | b:1+8
8:  | b-/d#/f#:1+8
10: | b-2:p2tr32   |  b-2:p2tr32  |  b-2:8 -:4. |

// m. 18
*
10: | -:4.
*
CALL  d_all_staccato
CALL  v_all_pp
3:   b-:pss     |
4:   e-:pss     |
6:   b-/g#-:pss |
11:  b-:pss     |
12:  g#-:pss    |
13:  e-:pss     |
14:  e-:pss     |

// m. 19-21
*
CALL m19_to_26_1(contrabass=0)
FUNCTION m19_to_26_1
	//    19               20                   21                    22
	3:  | b-:p8ss8ss     | e:8 f# g# b-:pss   | b-:p8ss e:8 g#:pss  | f#:8 d# b-:p8ss                 |
	4:  | e-:p8ss8ss     | e-:p888ss          | e-:p8ss8ss          | b-2/b-:8 b-2/f#- b-2/f#- e-:pss |
	6:  | b-/g#-:p8ss8ss | b-/g#-:p888ss      | b-/g#-:p8ss8ss      | b-2/d#:p888 b-/g#-:pss          |
	10: | e-:p8r8r       | e-:p888r           | e-:p8r8r            | b-2:p888r                       |
	11: | b-:p8ss8ss     | e:8 f# g# b-:pss   | b-:p8ss e:8 g#:pss  | f#:8 d# b-:p8ss                 |
	12: | g#-:p8ss8ss    | b-:p888 g#-:pss    | g#-:p8ss b-:p8ss    | b-:p888 g#-:pss                 |
	13: | e-:p8ss8ss     | g#-/e-:p888 e-:pss | e-:p8ss g#-/e-:p8ss | d#-/f#-:p888 e-:pss             |
	14: | e-:p8ss8ss     | e-:p888ss          | e-:p8ss8ss          | b-:p888 e-:pss                  |
	{ if ${contrabass} == 1
		//    59            60                  61                    62
		15: | e-2:p8ss8ss | e-2:p888ss        | e-2:p8ss8ss         | b-3:p888 e-2:pss |
	}
	* 3,4,6,10,11,12,13,14,15
	
	//    23               24                            25                                26/1
	3:  | b-:p8ss8ss     | e:8 f# g#    $ff e:16 g#    | $leg  b:4+16  $stac  a:16 g# f# | e:8 g# e
	4:  | e-:p8ss8ss     | e-:p888      $ff e-:16 e-   | f#-/a-:p8ss8ss                  | e-/g#-:8 e-/b-:p88
	6:  | b-/g#-:p8ss8ss | b-/g#-:p888  $ff b-/g#-:pss | b-2/d#:p8ss8ss                  | e-/g#-:p888
	10: | e-:p8r8r       | e-:p888r     $ff            | b-2:p8r8r                       | e-:8 e- e-
	11: | b-:p8ss8ss     | e:8 f# g#    $ff e:16 g#    | $leg  b:4+16  $stac  a:16 g# f# | e:8 g# e
	12: | g#-:p8ss8ss    | b-:p888      $ff e:16 e     | d#:p8ss8ss                      | e:8 e e
	13: | e-:p8ss8ss     | g#-/e-:p888  $ff g#-/b-:pss | a-/f#-:p8ss8ss                  | g#-/b-:p888
	14: | e-:p8ss8ss     | e-:p888      $ff e-:16 e-   | b-2:p8ss8ss                     | e-:8 e- e-
	{ if ${contrabass} == 1
		//    63            64
		15: | e-2:p8ss8ss | e-2:p888   $ff e-2:pss |
	}
	{ else
		//    23-24
		15: | -:1
	}
	//                                                   25 == 65                          26/1 == 66/1
	15:                                                | $ff b-3:p8ss8ss                 | e-2:p888
	*
END

// m. 26/2-30
*
CALL v_all_pp
CALL m26_2_to_34_1(trombone_ff=0)
FUNCTION m26_2_to_34_1
	VAR $trombone_dyn = $f
	{ if ${trombone_ff} == 1
		VAR $trombone_dyn = $ff
	}
	
	//   26/2        27              28                               29                             30
	0:   b+:16 b+  | b+:p8ss8ss    | e+2:8 f#+2 g#+2 b+:16 b+       | b+:p8ss e+2:8 g#+2:pss       | f#+2:8 d#+2 b+:p8ss        |
	1:   b+:16 b+  | b+:p8ss8ss    | e+2:8 f#+2 g#+2 b+:16 b+       | b+:p8ss e+2:8 g#+2:pss       | f#+2:8 d#+2 b+:p8ss        |
	2:   g#/b:pss  | g#/b:p8ss8ss  | g#/e+:8 g#/f#+ g#/g#+ g#/b:pss | g#/b:p8ss g#/e+:8 e+/g#+:pss | d#+/f#+:8 b/d#+ b g#/b:pss |
	3:   b-/b:pss  | b-/b:p8ss8ss  | e/e+:8 f#/f#+ g#/g#+ b-/b:pss  | b-/b:p8ss b-/b:8 g#/g#+:pss  | f#/f#+:8 d#/d#+ b-/b:p8ss  |
	4:   e-/b-:pss | e-/b-:p8ss8ss | e-/b-:p888ss                   | e-/b-:p8ss8ss                | b-2/f#-:p888 e-/b-:pss     |
	5:   b-:pss    | b-:p8ss8ss    | b-:p888ss                      | b-:p8ss8ss                   | b-:p888ss                  |
	6:   g#-/e:pss | g#-/e:p8ss8ss | g#-/e:p888ss                   | g#-/e:p8ss8ss                | b-2/d#:p888 g#-/e:pss      |
	7:   e/g#:pss  | e/g#:p8ss8ss  | e/g#:p888ss                    | e/g#:p8ss8ss                 | b-/b:p888 e/g#:pss         |
	8:   -:8       | e-:p8r8r      | e-:p888r                       | e-:p8r8r                     | b-2:p888r                  |
	10:  -:8       | e-:p8r8r_tr   | e-:p888r                       | e-:p8r8r_tr                  | b-2:p888r                  |
	11:  b-:pss    | b-:p8ss8ss    | e:8 f# g# b-:pss               | b-:p8ss e:8 g#:pss           | f#:8 d# b-:p8ss            |
	12:  g#-:pss   | g#-:p8ss8ss   | b-:8 b- b- g#-:pss             | g#-:p8ss b-:p8ss             | b-:p888 g#-:pss            |
	13:  e-:pss    | e-:p8ss8ss    | e-/g#-:p888 e-:pss             | e-:p8ss e-/g#-:p8ss          | d#-/f#-:p888 e-:pss        |
	14:  e-:pss    | e-:p8ss8ss    | e-:p888ss                      | e-:p8ss8ss                   | b-2:p888 e-:pss            |
	15:  e-2:pss   | e-2:p8ss8ss   | e-2:p888ss                     | e-2:p8ss8ss                  | b-3:p888 e-2:pss           |
	
	// m. 31-34/1
	//    31              32                                       33                                     34/1
	0:  | b+:p8ss8ss    | e+2:8 f#+2 g#+2        $ff e+2:16 g#+2 | $leg b+2:4+16 $stac a+2:16 g#+2 f#+2 | e+2:8 g#+2 e+2
	1:  | b+:p8ss8ss    | e+2:8 f#+2 g#+2        $ff e+:16 g#+   | $leg b+:4+16  $stac a+:16 g#+ f#+    | e+:8 g#+ e+
	2:  | g#/b:p8ss8ss  | g#/e+:8 g#/f#+ g#/g#+  $ff e+:16 g#+   | $leg b+:4+16  $stac a+:16 g#+ f#+    | e+:8 g#+ e+
	3:  | b-/b:p8ss8ss  | e/e+:8 f#/f#+ g#/g#+   $ff e:16 g#     | $leg b:4+16   $stac a:16 g# f#       | e:8 g# e
	4:  | e-/b-:p8ss8ss | e-/b-:p888             $ff e-/b-:pss   | b-2/d#:p8ss8ss                       | e-/e:8 e-/b-:p88
	5:  | b-:p8ss8ss    | b-:p888                $ff b-:pss      | b-:p8ss8ss                           | b-:p888
	6:  | g#-/e:p8ss8ss | g#-/e:p888             $ff g#-/e:pss   | b-2/d#:p8ss8ss                       | g#-/e:p888
	7:  | e/g#:p8ss8ss  | e/g#:p888              $ff e/g#:pss    | b-/b:p8ss8ss                         | g#/e:p888
	8:  | e-:p8r8r      | e-:p888r               $trombone_dyn   | b-2:p8r8r                            | e-:p888
	10: | e-:p8r8r_tr   | e-:p888r               $ff             | b-2:p8r8r                            | e-:p888
	11: | b-:p8ss8ss    | e:8 f# g#              $ff e:16 g#     | $leg b:4+16   $stac a:16 g# f#       | e:8 g# e
	12: | g#-:p8ss8ss   | b-:p888                $ff e:pss       | d#:p8ss8ss                           | e:p888
	13: | e-:p8ss8ss    | e-/g#-:p888            $ff b-/g#-:pss  | f#-/a-:p8ss8ss                       | g#-/b:p888
	14: | e-:p8ss8ss    | e-:p888                $ff e-:pss      | b-2:p8ss8ss                          | e-:p888
	15: | e-2:p8ss8ss   | e-2:p888               $ff e-2:pss     | b-3:p8ss8ss                          | e-2:p888
END

// m. 34/2-41
*
p:  $ff
CALL m34_2_to_41
FUNCTION m34_2_to_41
	//   34/2         35               36                                  37                               38
	0:   g#+2:pss   | g#+2:p8ss8ss   | g#+2:8 c#+3 g#+2 c#+3             | g#+2 c#+3 g#+2 f#+2            | e+2 d#+2 c#+2        g#+2:pss   |
	1:   e+2:pss    | e+2:p8ss8ss    | e+2:8 c#+2 e+2 c#+2               | e+2 c#+2 e+2 d#+2              | c#+2 c+2 c#+2        e+2:pss    |
	2:   e+/g#+:pss | e+/g#+:p8ss8ss | e+/g#+:8 c#+/c#+2 e+/g#+ c#+/c#+2 | e+/g#+ c#+/c#+2 e+/g#+ d#+/f#+ | c#+/e+ c+/d#+ c#+    e+/g#+:pss |
	3:   e+/g#+:pss | e+/g#+:p8ss8ss | e+/g#+:8 c#+ e+/g#+ c#+           | e+/g#+ c#+ e+/g#+ c+           | c#+ c+/d#+ c#+       e+/g#+:pss |
	4:   c#-/c#:pss | c#-/c#:p8ss8ss | c#-/c#:p8r8r                      | c#-/c#:8 - c#-/c# g#-2/g#-     | c#-/c#:p888ss                   |
	5:   g#:pss     | g#:p8ss8ss     | g#:p8r8r                          | g#:8 - g# f#                   | g# f# e              g#:pss     |
	6:   e/g#:pss   | e/g#:p8ss8ss   | e/g#:p8r8r                        | e/g#:8 - e/g# g#-/g#           | g#-/g# g#-/f# g#-/e  e/g#:pss   |
	7:   g#/e+:pss  | g#/e+:p8ss8ss  | g#/e+:p8r8r                       | g#/e+:8 - g#/e+ g#/f#+         | g#/e+:p888ss                    |
	8:   -:8        | c#-/c#:p8r8r   | c#-/c#:p8r8r                      | c#-/c#:8 - c#-/c# g#-2/g#-     | c#-/c#:p888r                    |
	p:   -:8        | perc_all:p8r8r | perc_all:p8r8r                    | perc_all:p8r8r                 | perc_all:p888r                  |
	10:  e-:pss     | e-:p8ss8ss     | e-:p8888                          | e-:p8888                       | e-:p888ss                       |
	11:  g#+:pss    | g#+:p8ss8ss    | g#+:8 c#+2 g#+ c#+2               | g#+ c#+2 g#+ f#+               | e+ d#+ c#+           g#+:pss    |
	12:  e+:pss     | e+:p8ss8ss     | e+:8 c#+ e+ c#+                   | e+ c#+ e+ d#+                  | c#+ f# e             e+:pss     |
	13:  e/g#:pss   | e/g#:p8ss8ss   | e/g#:8 c#/c#+ e/g# c#/c#+         | e/g# c#/c#+ e/g# d#/f#         | c#/e a g#            e/g#:pss   |
	14:  -:8        | c#-:p8r8r      | c#-:p8r8r                         | c#-:8 - c#- g#-2               | c#-:p888r                       |
	15:  -:8        | c#-2:p8r8r     | c#-2:p8r8r                        | c#-2:8 - c#-2 g#-3             | c#-2:p888r                      |
	
	//    39               40                                  41
	0:  | g#+2:p8ss8ss   | g#+2:8 c#+3 g#+2 c#+3             | g#+2 c#+3 b+2 a#+2             |
	1:  | e+2:p8ss8ss    | e+2:8 c#+2 e+2 c#+2               | e+2 c#+2 d#+2 c#+2             |
	2:  | e+/g#+:p8ss8ss | e+/g#+:8 c#+/c#+2 e+/g#+ c#+/c#+2 | e+/g#+ c#+/c#+2 d#+/b+ c#+/a#+ |
	3:  | e+/g#+:p8ss8ss | e+/g#+:8 c#+ e+/g#+ c#+           | e+/g#+ c#+ d#+/f#+ c#+/e+      |
	4:  | c#-/c#:p8ss8ss | c#-/c#:p8r8r                      | c#-/c#:8 - f#-2/f# f#-2/f#     |
	5:  | g#:p8ss8ss     | g#:p8r8r                          | g#:8 - f# f#                   |
	6:  | e/g#:p8ss8ss   | e/g#:p8r8r                        | e/g#:8 - b-/f# e/f#            |
	7:  | g#/e+:p8ss8ss  | g#/e+:p8r8r                       | g#/e+:8 - b e                  |
	8:  | c#-/c#:p8r8r   | c#-/c#:p8r8r                      | c#-/c#:8 - f#-2/f#- f#-2/f#-   |
	p:  | perc_all:p8r8r | perc_all:p8r8r                    | perc_all:p8r8r                 |
	10: | e-:p8ss8ss     | e-:p8888                          | e-:8 e- b-2 e-                 |
	11: | g#+:p8ss8ss    | g#+:8 c#+2 g#+ c#+2               | g#+ c#+2 e+ a#+                |
	12: | e+:p8ss8ss     | e+:8 c#+ e+ c#+                   | e+ c#+ f#+ e+                  |
	13: | e/g#:p8ss8ss   | e/g#:8 c#/c#+ e/g# c#/c#+         | e/g# c#/c#+ f# c#+             |
	14: | c#-:p8r8r      | c#-:p8r8r                         | c#-:8 - f#- f#-2               |
	15: | c#-2:p8r8r     | c#-2:p8r8r                        | c#-2:8 - f#-2 f#-3             |
END

// m. 42/1
CALL m42_1
FUNCTION m42_1
	0:  | b+2:8 a#+2 b+2
	1:  | b+:8 a#+ b+
	2:  | d#+/b+:8 e+/a#+ d#+/b+
	3:  | b/d#+:8 a#/c#+ b
	4:  | b-2/b:p888
	5:  | b:8 g f#
	6:  | b-/f#:8 e/g b-/f#
	7:  | b:8 e b
	8:  | b-2/b:p888
	p:  | perc_all:p888
	10: | b-2:p888
	11: | b+:8 a#+ b+
	12: | d#+:8 e+ d#+
	13: | f#:8 g f#
	14: | b-2:p888
	15: | b-3:p888
END

// m. 42/2 - 49
CALL  m34_2_to_41

// m. 50-58
CALL m50_to_58
FUNCTION m50_to_58
	//  | 50
	0:  | b+2:8
	1:  | b+:8
	2:  | d#+/b+:8
	3:  | b/d#+:8     -:4 $p b-/f#:pss            |
	4:  | b-2/b-:8
	5:  | b:8
	6:  | b-/f#:8     -:4 $p b-/f#:pss            |
	7:  | b:8         -:4 $p b:pss
	8:  | b-2/b-:8
	p:  | bd2/cc2/to:8
	10: | b-2:8
	11: | b+:16 $p a#+ c#+2 a#+   b+ a#+ c#+2 a#+ |
	12: | d#+:8
	13: | f#:8
	14: | b-2:8
	15: | b-3:8
	CALL  v_all_p
	CALL  i_pizzicato_14    // switch violoncello 14 to pizzicato mode
	*
	
	//    51                                  52                                    53
	3:  | b-/f#:p8ss b-/f#:8 e/g#           | f#/a:8 $p_marcato b-/f#:4 $p f#/a:8 | e/g# $p_marcato g#-/e:4 $p e/g#:8   |
	4:  | -:2                               | -:8 b-2 c#- d#-                     | e- f#- g#- a-                       |
	6:  | b-/f#:p8ss b-/f#:8 e/g#           | f#/a:8 $p_marcato b-/f#:4 $p f#/a:8 | e/g# $p_marcato f#-/g#-:4 $p e/g#:8 |
	7:  | b:8 -:4 b:pss                     | b:8 -:4 b:pss                       | b:8 -:4 b:pss                       |
	11: | b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+ | b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+   | b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+   |
	14: | -:2     $pp                       | -:8 b-2 c#- d#-                     | e- f#- g#- a-                       |
	*
	
	//    54                                  55                                  56
	2:  | -:4. b/f#+:pss                    | b/f#+:p8ss b/f#+:8 e+/g#+         | f#+/a+ $p_marcato b/f#+:4 $p f#+/a+:8 |
	3:  | d#/f#:p888 b-/f#:pss              | b-/f#:p8ss b-/f#:8 e/g#           | f#/a $p_marcato b-/f#:4 $p f#/a:8     |
	4:  | b- b-2 b- -                       | - - - -                           | - b-2 c#- d#-                         |
	5:  | $pp -:4. b-/b:pss                 | b-/b:8 - - b-/b:pss               | b-/b:8 - - b-/b:pss                   |
	6:  | b-/f# b-2/b-:p88 b-/f#:pss        | b-/f#:p8ss b-/f#:8 e/g#           | f#/a $p_marcato b-/f#:4 $p f#/a:8     |
	7:  | b:8
	11: | b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+ | b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+ | b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+     |
	12: | $pp b:16 a# c#+ a#   b a# c#+ a#  | b a# c#+ a#   b a# c#+ a#         | b a# c#+ a#   b a# c#+ a#             |
	14: | b- b-2 b- -                       | -:2                               | -:8 b-2 c#- d#-                       |
	*
	
	//    57                                      58/1
	2:  | e+/g#+ $p_marcato g#/e+:4 $p e+/g#+:8 | d#+/f#+
	3:  | e/g# $p_marcato g#-/e:4 $p e/g#:8     | d#/f#
	4:  | e- f#- g#- a-                         | b- -:4 
	5:  | b-/b:8 - - b-/b:pss                   | b-/b:8
	6:  | e/g# $p_marcato f#-/g#-:4 $p e/g#:8   | d#/f#
	11: | b+ a#+ c#+2 a#+   b+ a#+ c#+2 a#+     | b+:8 b:pss b:8
	12: | b a# c#+ a#   b a# c#+ a#             | b:8
	14: | e- f#- g#- a-                         | b-
	CALL i_arco_14    // switch violoncello 14 back to arco mode
	CALL  v_all_pp
	*
	
	// 58/2
	3:   b-:pss     |
	4:   e-:pss     |
	6:   g#-/b-:pss |
	11:  b-:pss     |
	12:  g#-:pss    |
	13:  e-:pss     |
	14:  e-:pss     |
	15:  e-2:pss    |
	*
END

// m. 59-66/1
CALL m19_to_26_1(contrabass=1)

// m. 66/2-74/1
CALL v_all_pp
CALL m26_2_to_34_1(trombone_ff=1)

// m. 74/2
*
CALL  v_all_tutta_forza
CALL  d_all_legato
{  t=7:4
	0:   e+2:32 f#+2 g#+2 a+2 b+2 c#+3 d#+3 |2
	1:   e+:32 f#+ g#+ a+ b+ c#+2 d#+2      |2
	11:  e+:32 f#+ g#+ a+ b+ c#+2 d#+2      |2
	12:  e:32 f# g# a b c#+ d#+             |2
}
CALL  d_all_staccato
* | 2

// m. 75-80
CALL m75_to_80(start=75)
FUNCTION m75_to_80
	CALL  d_all_staccato
	
	//    75              76                         77
	0:  | e+3:p8ss88   |  g#+3:4 f#+3              | e+3:8 d#+3 e+3 c#+3               |
	1:  | e+2:p8ss88   |  g#+2:4 f#+2              | e+2:8 d#+2 e+2 c#+2               |
	2:  | $leg b/e+:2  | (m) c+:2 g#+:4. f#+:8     | c#+/e+ c+/d#+ c#+/e+ a/c#+        |
	3:  | $leg b/e+:2  | (m) c+:2 g#+:4. f#+:8     | c#+/e+ c+/d#+ c#+/e+ a/c#+        |
	4:  | $leg b-:2    |  c                        | c#:8 c c# a-                      |
	5:  | $leg b-/b:2  |  g#                       | a                                 |
	6:  | $leg e-/g#:2 |  e-/g#                    | e-/e                              |
	7:  | e/e+:p8ss88  |  e/e+:2                   | e/e+:p8888                        |
	8:  | $leg e-/e:1.                                                                 |
	p:  | (q=3,m,tr=/32) to:2 (q=6) bd2/cc2:4                                          |
	10: | e-:p2tr32    |  e-:p2tr32                | e-:p2tr32                         |
	11: | e+2:p8ss88   | (tr=/16) g#+2:4. f#+2:pss | e+2:pss d#+2:pss e+2:pss c#+2:pss |
	12: | e+:p8ss88    | (tr=/16) g#+:4.  f#+:pss  | e+:pss d#+:pss e+:pss c#+:pss     |
	13: | b-/b:p2tr16  |  c/c+:p2tr16              |
	{ if ${start} == 75
		13:                         $leg | c#/c#+:pss c/c+:pss c#/c#+:pss a-/a:pss |
	}
	{ elsif ${start} in 83;119;127
		13:                              | c#/c#+:8 c/c+:8 c#/c#+:8 a-/a:8         |
	}
	14: | e-:p2tr16    |  e-:p2tr16                | e-:p2tr16                         |
	15: | e-2:p8888    |  e-2:p8888                | e-2:p8888                         |
	*
	CALL  v_all_ff
	CALL  d_all_staccato
	
	//    78                                    79                            80
	0:  | b+2:p8r8r                           | a+2:p8r8r                   | g#+2:p8r8r     |
	1:  | b+:8 - g#+2 -                       | f#+2:p8r8r                  | e+2:p8r8r      |
	2:  | g#/e+:8 - e+/g#+ -                  | f#+/a+:p8r8r                | e+/g#+:p8r8r   |
	3:  | g#/b:8 - g#/e+ -                    | a/f#+:p8r8r                 | g#/e+:p8r8r    |
	4:  | g#-/b-:8 - e-2/e- -                 | d#-2/d#:p8r8r               | e-2/e-:p8r8r   |
	5:  | b:p8r8r                             | a:p8r8r                     | b:p8r8r        |
	6:  | e-/g#:8 - g#-/e -                   | b-/f#:p8r8r                 | g#-/e:p8r8r    |
	7:  | e/e+:p8r8r                          | b-/b:p8r8r                  | e/b:p8r8r      |
	8:  | e-/e:p8r8r                          | d#-/d#:p8r8r                | e-/e:p8r8r     |
	p:  | perc_all:p8r8r                      | perc_all:p8r8r              | perc_all:p8r8r |
	10: | e-:p8r8r                            | b-2:p8r8r                   | e-:p8r8r       |
	11: | b+:16 c#+2 b+ c#+2 b+ c#+2 d#+2 e+2 | a+ b+ a+ b+ a+ b+ c#+2 d#+2 | g#+ a+ g#+ a+ g#+ a+ b+ c#+2 |
	12: | b:16 c#+ b c#+ b c#+ d#+ e+         | a b a b a b c#+ d#+         | g# a g# a g# a b c#+ |
	13: | g#-/g#:p8r8r                        | f#/a:p8r8r                  | b-/g#:p8r8r    |
	14: | e-:p8r8r                            | d#-:p8r8r                   | e-:p8r8r       |
	15: | e-2:p8r8r                           | d#-2:p8r8r                  | e-2:p8r8r      |
END

// m. 81-82
CALL m81_to_82
FUNCTION m81_to_82
	//    81                                   82
	0:  | f#+2:p8r8r                         | f#+2:8 -:8. b+2:16 c#+3 d#+3 | 
	1:  | f#+2:8 - e+2 -                     | d#+2:8 -:8. b+:16 c#+2 d#+2  |
	2:  | c#+/f#+:8 - c#+/e+ -               | d#+:8
	3:  | f#/e+:p8r8r                        | d#+:8
	4:  | a-2/a-:p8r8r                       | b-2/b-:8
	5:  | f#:p8r8r                           | b-/b:8
	6:  | e/f#:p8r8r                         | b-/f#:8
	7:  | e/e+:p8r8r                         | b-/b:8
	8:  | a-2/a-:p8r8r                       | b-2/b-:8
	p:  | perc_all:p8r8r                     | perc_all:8
	10: | e-:p8r8r                           | b-2:8
	11: | f#+:16 g#+ f#+ g#+ f#+ g#+ f#+ g#+ | f#+ g#+ f#+ d#+ b b+ c#+2 d#+2 |
	12: | f#:16 g# f# g# f# g# f# g#         | f# g# f# d# b- b c#+ d#+       |
	13: | c#/e:p8r8r                         | b-/d#:p8r8r                    |
	14: | e-:p8r8r                           | b-2:8
	15: | e-2:p8r8r                          | b-3:8
	*
END

// m. 83-88
CALL  m75_to_80(start=83)

// m. 89
CALL m89
FUNCTION m89
	0:  | f#+2:8 - b+2 -                    |
	1:  | c#+2:8 - d#+2 -                   |
	2:  | c#+/f#+:8 - d#+/f#+ -             |
	3:  | f#/e+:8 - f#/d#+ -                |
	4:  | a-2/a-:8 - b-2/b- -               |
	5:  | f#:8 - b- -                       |
	6:  | e/f#:8 - b-/f# -                  |
	7:  | e:8 - b -                         |
	8:  | a-2/a-:8 - b-2/b- -               |
	p:  | perc_all:p8r8r                    |
	10: | e-:8 - b-2 -                      |
	11: | f#+:16 g#+ f#+ g#+ f#+ a+ g#+ f#+ |
	12: | f#:16 g# f# g# f# a g# f#         |
	13: | c#/e:8 - f#-/d# -                 |
	14: | e-:8 - b-2 -                      |
	15: | e-2:8 - b-3 -                     |
END

// m. 90
0:  | e+2
1:  | e+2
2:  | e+
3:  | g#/e+
4:  | e-
5:  | g#
6:  | g#-/e
7:  | e/b
8:  | e-
p:  | perc_all:8
10: | e-
11: | e+:8 - $leg $sf_accent (m) c#+:4+16
12: | e:8
13: | g#-/e
14: | e-
15: | e-2
CALL  i_pizzicato_14
CALL  i_pizzicato_15
15:       - - - |
*

// m. 91-94
CALL v_all_pp
CALL d_all_staccato
CALL m91_to_94(start=91)
FUNCTION m91_to_94
	//   91                                92                  93                  94
	4: | -:2 $leg                        | (m) c#:2+2+8 -:2  | g#-/c             |
	6: | -:2 $leg                        | c+/e+:2           | b/d               | c+:8
	{ if ${start} == 91
	    11: | -:16 c+ c#+ c+ d#+ c#+ b a |
	}
	{ else
	    11: | c#+ c+ c#+ c+ d#+ c#+ b a  |
	}
	11:                                  | a g# e (q=5) c#   | e d# c (q=5) g#-  |
	{ if ${start} == 91
	    11:                                                                      | g#- c# e g# (q=4) c#+       |
	}
	{ else
	    11:                                                                      | g#- c# e g# c#+ e+ d#+ c#+  |
	}
	12: | g#:8   - a     -               |   g#   - - e      | f#     - - d#     | e
	13: | c#/e:8 - c#/f# -               |   c#/e - - g#-/c# | g#-/c# - - g#-/d# | g#-/c#
	14: | c#:8   - f#-   -               |   c#-  - - c#-    | g#-    - - g#-2   | c#-
	15: | c#-:8  - f#-2  -               |   c#-2 - - c#-2   | g#-2   - - g#-3   | c#-2
	*
END

// m. 95-98
CALL m91_to_94(start=95)

// m. 99-100
CALL m99(start=99)
CALL m99(start=100)
FUNCTION m99
	2:  | $leg c+/d#+:4. c#+/e+:8       |
	{ if ${start} == 99
		3: | $leg (m) g#+:1+4
	}
	11: | d#+:16 c+ g# g# g# g#+ e+ c#+ |
	12: | d#:8    - - e                 |
	13: | g#-/c:8 - - g#-/c#            |
	14: | g#-:8   - - g#-               |
	15: | g#-2:8  - - g#-2              |
	*
END

// m. 101-102
//    101                        102
2:  | b/d#+:4 a#/c#+           | g#/b:8
3:  | -:4        g             | g#:8
4:  | d#:4       d#-           | g#-:8
11: | d#+ b g# g# a# f## d# d# | g# f## g# g g# a g# f# |
12: | d#:8     - c#       -    | b-
13: | g#-/b-:8 - f##-/a#- -    | d#-/g#-
14: | d#-:8    - d#-      -    | g#-
15: | d#-2:8   - d#-2     -    | g#-2
*

// m. 103-104
CALL m103_to_104(start=103)
FUNCTION m103_to_104
	//    103                         104
	3:  | g#-/e:4. b-/f#:8          | e/g#:4. f#/a:8      |
	11: | e:16 b- a#- b- e b- f# b- | g# e d# e g# e a f# |
	12: | b-:8 - g#- b-             | e - e f#            |
	13: | e-/g#-:8 - - -            |
	{ if ${start} == 103
	    13:                         | g#-/b-
	}
	{ else
	    13:                         | e-/g#-
	}
	14:  e-:8     - - -             | e-:p8r8r  |
	15:  e-2:8    - - -             | e-2:p8r8r |
	*
END

// m. 105
3:  | g#/b:4   g/a#               |
6:  | (m) c+:*2+2+8
11: | b g#+ f#+ e+ d#+ f#+ e+ c#+ |
12: | g#     - a#    -            |
13: | g#-/b- - g-/c# -            |
14: | e-     - e-    -            |
15: | e-2    - e-2   -            |
*

// m. 106-108
CALL m106_to_108(start=106)
FUNCTION m106_to_108
	//    106                          107                      108
	3:  | g#/b:2                     | f#/a                   |                        |
	4:  | -:2                        | d#                     | e                      |
	6:  | -:2                        | g                      |                        |
	11: | b c#+ b c#+ d#+ e+ f#+ g#+ | a b a b c#+ d#+ e+ f#+ | g# a g# a b c#+ d#+ e+ |
	12: | b     - g#   -             | a:p8r8r                | g#:p8r8r               |
	13: | g#-/e - b-/e -             | b-/f#:p8r8r            | b-/e:p8r8r             |
	14: | e-:p8r8r                   | b-2:p8r8r              | e-:p8r8r               |
	15: | e-2:p8r8r                  | b-3:p8r8r              | e-2:p8r8r              |
	{ if ${start} == 106
	    3:                                                      (m) e:1 g#:2           |
	    6:                                                      (m) e:1
	}
	{ else
	    3:                                                      (m) e:2. g#:2          |
	    6:                                                      (m) e:2.
	}
	*
END

// m. 109-110
//    109                       110
3:  | f#                      | d#/f#:8
4:  | a-/c#                   | b-:8
6:  | -:2                     | b-:8
11: | f# g# f# g# f# g# f# g# | f# g# f# d# b- c c# d# |
12: | f#:p8r8r                | f#
13: | e-/c#:p8r8r             | f#-/d#:8
14: | a-2:p8r8r               | b-2
15: | a-3:p8r8r               | b-3
*

// m. 111-112
CALL m103_to_104(start=111)

// m. 113
3:  | g#/b:4   g/a#               |
6:  | (m) c+:*2+4
11: | b g#+ f#+ e+ d#+ f#+ e+ d#+ |
12: | g#     - a#    -            |
13: | e-/g#- - g-/c# -            |
14: | e-     - e-    -            |
15: | e-2    - e-2   -            |
*

// m. 114-116
CALL m106_to_108(start=114)

// m. 117-118
//    117                          118
0:  | -:2                        | -:16   $stac $ff  e+2 f#+2 g#+2 a+2 b+2 c#+3 d#+3 |
1:  | -:2                        | -:16   $stac $ff  e+  f#+  g#+  a+  b+  c#+2 d#+2 |
3:  | f#:2                       | e/g#:8
4:  | a-/c#:4 b-                 | e:8
6:  | -:4 b-                     | e:8
11: | f# c#+ c+ c#+ d#+ c#+ a f# | e      $stac $ff  e+  f#+  g#+  a+  b+  c#+2 d#+2 |
12: | f#:8 - d# -                | e:16   $stac $ff  e   f#   g#   a   b   c#+  d#+  |
13: | c#/e:8 - f#-/a- -          | e-/g#-
14: | a-2:8 - b-2 -              | e-
15: | a-3:8 - b-3 -              | e-2
CALL  d_all_staccato
CALL  v_all_ff
*

// m. 119-233
CALL m75_to_80(start=119)   // 119-124
CALL m81_to_82              // 125-126
CALL m75_to_80(start=127)   // 127-132
CALL m89                    // 133

// m. 134/1
0:  | e+2:8 b+2 e+2
1:  | e+2:8 b+ e+2
2:  | e+:p888
3:  | g#/e+:8 g#/b g#/e+
4:  | e-/b-:p888
5:  | b-/g#:p888
6:  | g#-/e:p888
7:  | e/b:p888
8:  | e-:p888
p:  | perc_all:p888
10: | e-:p888
11: | e+:8 b e+
12: | e:8 b- e
13: | g#-/e:p888
14: | e-:p888
15: | e-2:p888

// m. 134/2-166/1
CALL v_all_ff
CALL m34_2_to_41                // 134/2-141
CALL m42_1                      // 142/1
CALL m34_2_to_41                // 142/2-149
CALL m50_to_58                  // 150-158
10:  $p                         // set timpani to piano instead of pianissimo
CALL m19_to_26_1(contrabass=1)  // 159-166/1

// m. 166/2-171
CALL  v_all_f       
//   166/2       167                168                       169                     170                     171
0:   b+2:pss   | b+2:p8ss8ss      | e+3:8 f#+3 g#+3 b+2:pss | b+2:p8ss e+3 g#+3:pss | f#+3 d#+3 b+2 b+2:pss | b+2:p8ss8ss      |
1:   b+:pss    | b+:p8ss8ss       | e+2:8 f#+2 g#+2 b+:pss  | b+:p8ss e+2 g#+2:pss  | f#+2 d#+2 b+ b+:pss   | b+:p8ss8ss       |
2:   b:pss     | b:p8ss8ss        | e+:8 f#+ g#+ b:pss      | b:p8ss e+ g#+:pss     | f#+ d#+ b b:pss       | b:p8ss8ss        |
3:   b:pss     | b:p8ss8ss        | e+:8 f#+ g#+ b:pss      | b:p8ss e+ g#+:pss     | f#+ d#+ b b:pss       | b:p8ss8ss        |
4:   g#-/e:pss | g#-/e:p8ss8ss    | g#-/e:p888ss            | g#-/e:p8ss8ss         | b-2/f#:p888 b-:pss    | g#-/e:p8ss8ss    |
5:   -:8       | b-/g#:pr8r8      | b-/g#:pr8r8             | b-/g#:pr8r8           | b-/g#:pr8r8           | b-/g#:pr8r8      |
6:   e/g#:pss  | e/g#:p8ss8ss     | e/g#:p888ss             | e/g#:p8ss8ss          | b-/f#:p888 e/g#:pss   | e/g#:p8ss8ss     |
7:   -:8       | e/b:pr8r8        | e/b:pr8r8               | e/b:pr8r8             | b-/b:pr8r8            | e/b:pr8r8        |
8:   -:8       | e-/e:p8r8r       | e-/e:p8r8r              | e-/e:p8r8r            | b-2/b-:p8r8r          | e-/e:p8r8r       |
p:   -:8       | perc_all:perc167 | perc_all:perc167        | perc_all:perc167      | perc_all:perc167      | perc_all:perc167 |
10:  e-:pss    | e-:p8ss8ss       | e-:p888ss               | e-:p8ss8ss            | b-2:p888 e-:pss       | e-:p8ss8ss       |
11:  b:pss     | b:p8ss8ss        | e+:8 f#+ g#+ b:pss      | b:p8ss8ss             | f#+ d#+ b b           | b:p8ss8ss        |
12:  -:8       | b-/g#:p2tr16     | b-/g#:p2tr16            | b-/g#:p2tr16          | b-/f#:p2tr16          | b-/g#:p2tr16     |
13:  -:8       | e-/e:p2tr16      | e-/e:p2tr16             | e-/e:p2tr16           | b-/d#:p2tr16          | e-/e:p2tr16      |
14:  -:8       | e-:p8r8r         | e-:p8r8r                | e-:p8r8r              | b-2:p8r8r             | e-:p8r8r         |
15:  -:8       | e-2:p8r8r        | e-2:p8r8r               | e-2:p8r8r             | b-3:p8r8r             | e-2:p8r8r        |

// m. 172-173
//    172                         173
0:  | e+3 f#+3 g#+3 e+2:16 g#+2 | $leg b+2:4+16  $stac a+2:16  g#+2   f#+2   |
1:  | e+2 f#+2 g#+2 e+:16 g#+   | $leg b+:4+16   $stac a+:16   g#+    f#+    |
2:  | e+ f#+ g#+ e+:16 g#+      | $leg b+:4+16   $stac a+:16   g#+    f#+    |
3:  | e+ f#+ g#+ e/e+:16 g#/g#+ | $leg b/b+:4+16 $stac a/a+:16 g#/g#+ f#/f#+ |
4:  | g#-/e:p888 g#-/e:pss      | f#-/d#:p8ss88                              |
5:  | b-/g#:pr8r8               | b-/g#:pr8r8                                |
6:  | e/g#:p888ss               | b-/f#:p8ss88                               |
7:  | e/b:pr8r8                 | b-/b:pr8r8                                 |
8:  | e-/e:p8r8r                | b-/b-2:p8r8r                               |
p:  | perc_all:perc167          | perc_all:perc167                           |
10: | e-:p888ss                 | b-2:p8ss88                                 |
11: | e+ f#+ g#+ e+/g#+:pss     | $leg b+:4+16   $stac a+:16   g#+    f#+    |
12: | b-/g#:p2tr16              | d#/b:p2tr16                                |
13: | e-/e:p2tr16               | b-/f#:p2tr16                               |
14: | e-:p8r8r                  | b-2:p8r8r                                  |
15: | e-2:p8r8r                 | b-3:p8r8r                                  |

// m. 174-177
CALL m174_to_177(start=174)
FUNCTION m174_to_177
	CALL d_all_legato
	//   174                                175                                    176                          177
	0: | e+2:8. a+2:16 g#+2:8. c#+3:16    | b+2 c#+3 d#+3 e+3 d#+3 e+3 f#+3 g#+3 | a+3:1                      |
	1: | e+:8.  a+:16  g#+:8.  c#+2:16    | b+  c#+2 d#+2 e+2 d#+2 e+2 f#+2 g#+2 | a+2:1                      |
	2: | e+/g#+:1                         | $stac                                | f#+/a+:8 f#+/a+:4 f#+/a+:8+8   f#+/a+:8 f#+/a+:4 |
	3: | g#/e+:1                          | $stac                                | a/f#+:8  a/f#+:4  a/f#+:8+8    a/f#+:8  a/f#+:4  |
	4: | e-:8.    e:16 e:4+8          $stac       b-:8 g#- e-                    | b-2 c- c#- d-              | d#- f#- b- b-2      |
	5: | b-/g#:8. b-/g#:16 b-/g#:4+8  $stac       b-/g#:p888                     | a:4 a                      | a a                 |
	6: | e/g#:8. e/g#:16 e/g#:4+8     $stac       e/g#:p888                      | f#/a:4 f#/a                | f#/a f#/a           |
	7: | e/b:8. e/b:16 e/b:4+8        $stac       e/b:p888                       | -:8 f#+:4 f#+:8+8              f#+:4 f#+:8       |
	{ if ${start} in 174;198
	    8: | e-/e:2                       | $stac e:8
	}
	{ else
	    8: | e-/e:8. e:16 e:4+8
	}
	8:                              $stac             b-:8 g#- e-                | b-2/b- c-/c c#-/c# d-/d      | d#-/d# f#-/f# b-2/b- b-2/b- |
	p:  | perc_all:perc167                | perc_all:perc167                     | to:8 perc_all:p888           | perc_all:p8888    |
	10: | e-:p2tr32                       | $stac e-:p2tr32                      | b-2:p8888                    | b-2:p8888         |
	11: | e+:16 f#+ g#+ a+ g#+ a+ b+ c#+2 | b+ c#+2 d#+2 e+2 d#+2 e+2 f#+2 g#+2  | $stac a+2:p2tr16             | a+2:p2tr16        |
	12: | e:16  f#  g#  a  g#  a  b  c#+  | b  c#+  d#+  e+  d#+  e+  f#+  g#+   | $stac a+:p2tr16              | a+:p2tr16         |
	13: | $stac e/g#:p2tr16               | e/g#:p2tr16                          | f#/f#+:p2tr16                | f#/f#+:p2tr16     |
	14: | e-:8.  e:16  e:4+8        $stac             b-:8  g#-  e-              | b-2 c-  c#-  d-              | d#-  f#-  b-  b-2 |
	15: | e-2:8. e-:16 e-:4+8       $stac             b-2:8 g#-2 e-2             | b-3 c-2 c#-2 d-2             | d#-2 f#-2 b-2 b-3 |
END

// m. 178-181
CALL m174_to_177(start=178)

// m. 182-185
CALL m182_to_183(start=182)   // 182-183
CALL m182_to_183(start=184)   // 184-185
FUNCTION m182_to_183
	CALL d_all_staccato
	//    182                                       183
	0:  | g#+3:8   - d#+3     -                   | e+3    - f#+3    - |
	1:  | g#+2:8   - d#+2     -                   | e+2    - f#+2    - |
	2:  | e+/g#+:8 - c+/g#+   -                   | c#+/e+ - d#+/b+  - |
	3:  | g#/e+:8  - c#/d#+   -                   | c#+/e+ - d#+/f#+ - |
	4:  | e-/e:8   - g#-2/g#- -                   | c#-/c# - b-2/b-  - |
	5:  | g#:p8r8r                                | g#:8   - b       - |
	6:  | e/g#:8   - f#/g#    -                   | e/g#   - b-/f#   - |
	{ if ${start} in 184;208
	    7: | e+/g#:8
	}
	{ else
	    7: | e+:8
	}
	7:            - g#       -                    | e+     - b       -   |
	8:  | e-/e:8  - g#-2/g#- -                    | c#-/c# - b-2/b-  -   |
	p:  | perc_all:p8r8r                          | perc_all:p8r8r       |
	10: | e-:p8r8r                                | e-:8   - b-2     -   |
	11: | g#+2:pssss $leg g#+2:16 $stac d#+2:psss | $leg d#+2 $stac e+2:psss $leg e+2 $stac f#+2:psss |
	12: | g#+:pssss  $leg g#+:16  $stac d#+:psss  | $leg d#+  $stac e+:psss  $leg e+  $stac f#+:psss  |
	13: | e/e+:8 - g#/c+:p4tr16                   | e/c#+  - d#/b:p4tr16 |
	14: | e-:8   - g#-2 -                         | c#-    - b-2     -   |
	15: | e-2:8  - g#-3 -                         | c#-2   - b-3     -   |
END

// m. 186-197
CALL m186_to_197(start=186)
FUNCTION m186_to_197
	CALL  d_all_legato
	CALL  v_all_sf
	//    186 - 187                               188 - 189                                         190 - 191
	0:  | g+3:2+8 $stac $f e+3:16 e+3 c+3:8 e+3 | $sf $leg g#+3:2+8 $stac $f e+3:16 e+3 b+2:8 e+3 | $sf $leg g#+3:2+8 $stac $f f+3:16 f+3 c#+3:8 f+3 |
	1:  | g+2:2+8 $stac $f e+2:16 e+2 c+2:8 e+2 | $sf $leg g#+2:2+8 $stac $f e+2:16 e+2 b+:8  e+2 | $sf $leg g#+2:2+8 $stac $f f+2:16 f+2 c#+2:8 f+2 |
	2:  | c+/c+2:2+8                     -:4+8  | $sf $leg e+/b+:2+8                    -:4+8     | $sf $leg f+/g#+:2+8                    -:4+8     |
	3:  | c+/g+:2+8 $stac $f e+:16 e+ c+:8 e+   | $sf $leg g#+:2+8  $stac $f e+:16  e+  b:8   e+  | $sf $leg g#+:2+8 $stac $f f+:16 f+ c#+:8 f+      |
	4:  | e-2/e-:2+8                     -:4+8  | $sf $leg e-2/e-:2+8                   -:4+8     | $sf $leg c#-/c#:2+8                    -:4+8     |
	5:  | g-/g:2+8                       -:4+8  | $sf $leg b-/b:2+8                     -:4+8     | $sf $leg g#:2+8                        -:4+8     |
	6:  | e-/e:2+8                       -:4+8  | $sf $leg e-/g#:2+8                    -:4+8     | $sf $leg f/g#:2+8                      -:4+8     |
	7:  | e/e+:2+8                       -:4+8  | $sf $leg g#/e+:2+8                    -:4+8     | $sf $leg b:2+8                         -:4+8     |
	8:  | e-/e:2+8                       -:4+8  | $sf $leg e-/e:2+8                     -:4+8     | $sf $leg c#-/c#:2+8                    -:4+8     |
	p:  | perc_all:perc186_to_187               | perc_all:perc186_to_187                         | perc_all:perc186_to_187                          |
	10: | e-:p2tr32   $stac $f e-:8      -:4+8  | $sf $leg e-:p2tr32  $stac $f e-:8     -:4+8     | $sf $leg e-:p2tr32  $stac $f e-:8      -:4+8     |
	13: | e/c+:p2tr16 $stac $f e/c+:8    -:4+8  | $sf $leg e/b:p2tr16 $stac $f e/b:8    -:4+8     | $sf $leg f/b:p2tr16 $stac $f f/b:8     -:4+8     |
	14: | c:p2tr16    $stac $f c:8       -:4+8  | $sf $leg b-:p2tr16  $stac $f b-:8     -:4+8     | $sf $leg c#:p2tr16  $stac $f c#:8      -:4+8     |
	15: | e-2:8    $stac $f e-2:p8888    -:4+8  | $sf $leg e-2:8 $stac $f e-2:p8888     -:4+8     | $sf $leg c#-2:8 $stac $f c#-2:p8888    -:4+8     |
	CALL  d_all_legato
	CALL  v_all_sf
	//    192 - 193                                  194 - 195                              196 - 197
	0:  | a#+3:2+8 $stac $f g+3:16 g+3 e+3:8 g+3   | b+3 a#+3 a+3 g#+3 f#+3 e+3 d#+3 c#+3 | b+3 a#+3 a+3 g#+3 f#+3 e+3 d#+3 f#+3 |
	1:  | a#+2:2+8 $stac $f g+2:16 g+2 e+2:8 g+2   | b+2 a#+2 a+2 g#+2 f#+2 e+2 d#+2 c#+2 | b+2 a#+2 a+2 g#+2 f#+2 e+2 d#+2 f#+2 |
	2:  | g+/bb+:2+8       $f            -:4+8     | $leg g#+/b+:2 e+/g#+                 | $leg  f#+/a+  d#+/f#+
	3:  | a#/a#+:2+8 $stac $f g/g+:pss e/e+:8 g/g+ | $leg b/e+:2+2                        | $leg  a/d#+
	4:  | c-/c:2+8         $f            -:4+8     | $stac b-2/b:p8888 b-2/b:p8888        | b-2/b:p8888      |     b-2/b:p8888   |
	5:  | g:2+8            $f            -:4+8     | b-/b:2+2                             | b-/a
	6:  | e-/e:2+8         $f            -:4+8     | e/g#:2+2                             | b-/f#
	7:  | e/e+:2+8         $f            -:4+8     | g#/e+:2+2                            | b-/b
	8:  | c-/c:2+8         $f            -:4+8     | b-2/b-:2+2                           | b-2/b-
	p:  | perc_all:perc186_to_187   $f             | perc_all:perc194   perc_all:perc194  | perc_all:perc194 | perc_all:perc194 |
	10: | e-:p2tr32   $stac $f e-:8      -:4+8     | b-2:p2tr32      b-2:p2tr32           | b-2:p2tr32       | b-2:p2tr32       |
	13: | g/e+:p2tr16 $stac $f g/e+:8    -:4+8     | g#/e+:p2tr16    g#/e+:p2tr16         | d#/b:p2tr16      | d#/b:p2tr16      |
	14: | c:p2tr16    $stac $f c:8       -:4+8     | b-:p2tr16       b-:p2tr16            | b-2:p2tr16       | b-2:p2tr16       |
	15: | c-2:8    $stac $f c-2:p8888    -:4+8     | b-3:p8888       b-3:p8888            | b-3:p8888        | b-3:p8888        |
	
	//    186             187                                        188
	11: | g+2:p2tr16 $f | $stac g+2:16 g+2 e+2 e+2 c+2 c+2 e+2 e+2 | $sf $leg g#+2:p2tr16 $f $stac |
	12: | g+:p2tr16  $f | $stac g+:16 g+ e+ e+ c+ c+ e+ e+         | $sf $leg g#+:p2tr16  $f $stac |
	
	//    189                                        190           191                                            192
	11: | g#+2 g#+2 e+2 e+2 b+ b+ e+2 e+2 $sf $leg | g#+2:p2tr16 | $f $stac g#+2 g#+2 f+2 f+2 c#+2 c#+2 f+2 f+2 | $sf a#+2:p2tr16 $f |
	12: | g#+  g#+  e+  e+  b  b  e+  e+  $sf $leg | g#+:p2tr16  | $f $stac g#+  g#+  f+  f+  c#+  c#+  f+  f+  | $sf a#+:p2tr16  $f |
	
	{ if ${start} == 186
	    //    193                  194 - 195                              196 - 197
	    11: | a#+2:8 g+2 e+2 g+2 | b+2 a#+2 a+2 g#+2 f#+2 e+2 d#+2 c#+2 | b+ a#+ a+ g#+ f#+ e+ d#+ f#+ |
	    12: | a#+:8  g+  e+  g+  | b+  a#+  a+  g#+  f#+  e+  d#+  c#+  | b  a#  a  g#  f#  e  d#  f#  |
	}
	{ elsif ${start} == 210
	    //    217                                218
	    11: | a#+2:pss g+2:pss e+2:pss g+2:pss | b+2:pss a#+2:pss a+2:pss g#+2:pss |
	    12: | a#+:pss  g+:pss  e+:pss  g+:pss  | b+:pss  a#+:pss  a+:pss  g#+:pss  |
	    
	    //    219                                  220
	    11: | f#+2:pss e+2:pss d#+2:pss c#+2:pss | b+:pss a#+:pss a+:pss g#+:pss |
	    12: | f#+:pss  e+:pss  d#+:pss  c#+:pss  | b:pss  a#:pss  a:pss  g#:pss  |
	    
	    //    221
	    11: | f#+:pss e+:pss d#+:pss f#+:pss |
	    12: | f#:pss  e:pss  d#:pss  f#:pss  |
	}
END

// m. 198-221
CALL m174_to_177(start=198)   // 198-201
CALL m174_to_177(start=202)   // 202-205
CALL m182_to_183(start=206)   // 206-207
CALL m182_to_183(start=208)   // 208-209
CALL m186_to_197(start=210)   // 210-221

// m. 222-225
CALL d_all_legato
//    222                                        223           224                           225
0:  | e+3:16 d#+3 e+3 d#+3 e+3:8 $stac b+2:pss | b+2:p8ss8ss | e+3:8 f#+3 g#+3 $ff b+2:pss | b+2:p8ss8ss |
1:  | e+2:16 d#+2 e+2 d#+2 e+2:8 $stac b+:pss  | b+:p8ss8ss  | e+3:8 f#+3 g#+3 $ff b+:pss  | b+:p8ss8ss  |
2:  | e+/g#+:4+8                 $stac b:pss   | b:p8ss8ss   | e+:8  f#+  g#+  $ff b:pss   | b:p8ss8ss   |
3:  | g#/e+:4+8                  $stac b:pss   | b:p8ss8ss   | e+:8  f#+  g#+  $ff b:pss   | b:p8ss8ss   |
4:  | e-:4+8                     $stac b-:pss  | b-:p8ss8ss  | e:8   f#   g#   $ff b-:pss  | b-:p8ss8ss  |
5:  | b-/g#:4+8                  -:8           |             |                             |             |
6:  | g#-/e:4+8                  $stac b-:pss  | b-:p8ss8ss  | e:8   f#   g#   $ff b-:pss  | b-:p8ss8ss  |
7:  | e/b:4+8                    -:8           |             |                             |             |
8:  | e-:4+8                     -:8           |             |                             |             |
p:  | perc_all:4
10: | e-:p4tr32 e-:8
11: | e+:16 d#+ e+ d#+ e+:8      -:8           | -:2         | -:4 -:8  $stac  $ff b:pss   | b:p8ss8ss   |
12: | e:16  d#  e  d#  e:8       -:8           | -:2         | -:4 -:8  $stac  $ff b:pss   | b:p8ss8ss   |
13: | e/g#:p4tr16     e/g#:8     -:8           | -:2         | -:4 -:8  $stac  $ff b-:pss  | b-:p8ss8ss  |
14: | e-:16  d#-  e-  d#-  e-:8  -:8           | -:2         | -:4 -:8  $stac  $ff b-:pss  | b-:p8ss8ss  |
15: | e-2:8                                                             $stac

// m. 226-229
//    226              227               228              229
0:  | g#+3 a+3 b+3 - | e+3 f#+3 g#+3 - | g#+2 a+2 b+2 - | -:2 |
1:  | g#+2 a+2 b+2 - | e+3 f#+3 g#+3 - | g#+  a+  b+  - |
2:  | g#+  a+  b+  - | e+  f#+  g#+  - | g#   a   b   - |
3:  | g#+  a+  b+  - | e+  f#+  g#+  - | g#   a   b   - |
4:  | g#   a   b   - | e   f#   g#   - | g#-  a-  b-  - |
6:  | g#   a   b   - | e   f#   g#   - | g#-  a-  b-  - |
11: | g#+  a+  b+  - | e   f#   g#   - |                |
12: | g#+  a+  b+  - | e   f#   g#   - |                |
13: | g#   a   b   - | e   f#   g#   - | g#-  a-  b-  - |
14: | g#   a   b   - | e   f#   g#   - | g#-  a-  b-  - |
*

// m. 230-231
CALL v_all_sf
//    230                                231
0:  | $leg d#+3:2+2                    |
1:  | $leg d#+2:2+2                    |
2:  | $leg d#+/b+:2+2                  |
3:  | $leg d#+/f#+:2+2                 |
4:  | $leg b-2/d#:2+2                  |
5:  | $leg b-/b:2+2                    |
6:  | $leg b-/f#:2+2                   |
7:  | $leg b:2+2                       |
8:  | $leg b-2/b-:2+2                  |
p:  | perc_all:perc167                 | $ff perc_all:perc167           |
10: | $leg b-2:p2tr32                  | $ff b-2:p2tr32                 |
11: | b:16 $ff c+ c#+ d+ d#+ e+ f+ f#+ | g+ g#+ a+ a#+ b+ c+2 c#+2 d#+2 |
12: | b-:16 $ff c c#  d  d#  e  f  f#  | g  g#  a  a#  b  c+  c#+  d#+  |
13: | f#/a:p2tr16                      | $ff f#/a:p2tr16                |
14: | b-:p2tr16                        | $ff b-:p2tr16                  |
15: | b-3:8 $ff b-3:p888               | b-3:p8888                      |
CALL v_all_ff

// m. 232-235
*
CALL d_all_staccato
{ q=4
	{ q=2
		0:   e+3:8       d#+3
		1:   e+3:8       d#+3
		2:   e+/g#+:8    d#+/b+
		3:   e+/g#+:8    d#+/a+
		4:   e-/e:8      b-2/b-
		5:   b-/b:8      b-/b
		6:   e/g#:8      b-/f#
		7:   e:8         b
		8:   e-/e:8      b-2/b-
		10:  e-:8        b-2
		11:  e+2:16 d#+2 f#+2 d#+2
		12:  e+:16  d#+  f#+  d#+
		13:  e/g#:8      f#/a
		14:  e-:8        b-2
		15:  e-2:8       b-3
	}
	p:  | perc_all:perc232 |
}

// m. 236-243
{
	//    236                  237                 238               239
	0:  | e+3:p8ss88         | e+3:8 b+2:pss88   | b+2 g#+2:pss88  | g#+2 e+2:pss88   |
	1:  | e+2:p8ss88         | e+2:8 b+:pss88    | b+  g#+:pss88   | g#+  e+:pss88    |
	11: | e+2:8 e+2:pss4tr16 | e+2:8 b+:pss4tr16 | b+ g#+:pss4tr16 | g#+  e+:pss4tr16 |
	
	{ m //   236-244/1
	    2: | $leg e+/g#+:*4+8
	    3: | $leg b/g#+:*4+8
	    
	    //   236-239          240-241/1             241/2-242/1     242/2-243/1       243/2-244/1
	    4: | $leg e-2/e-:*2 | e-2/e-:8  e-/e:4.+8   b-2/b-          g#-2/g#-          e-2/e-
	    8: | $leg e-/e:*2   | -:8 e-/e:4. -:8       b-2/b-:4. -:8   g#-2/g#-:4. -:8   e-:4.+8
	}
	{ q=8 //  236-243
	    5:  | -:8 b-/b:4.      |
	    6:  | -:8 e-/g#:4.     |
	    7:  | -:8 g#/e+:4.     |
	    p:  | perc_all:perc236 |
	    10: | e-:p2tr32        |
	}
	{ q=4 //  236-239
	    12: | g#/e+:p2tr16 |
	    13: | e/b:p2tr16   |
	    14: | e-:p2tr16    |
	    15: | e-2:p8888    |
	}
	{ q=4 //  240-243
	    12: | b-/g#:p2tr16 |
	    13: | e-/e:p2tr16  |
	}
	
	//    240               241              242               243
	0:  | e+2 e+3:pss88   | e+3 b+2:pss88  | b+2 g#+2:pss88  | g#+2 e+2:pss88  |
	1:  | e+  e+2:pss88   | e+2 b+:pss88   | b+  g#+:pss88   | g#+  e+:pss88   |
	11: | e+  e+:pss4tr16 | e+  b:pss4tr16 | b   g#:pss4tr16 | g#   e:pss4tr16 |
	14: | e-:8 e:p888     | e   b-:p888    | b-  g#-:p888    | g#-  e-:p888    |
	15: | e-2:8 e-:p888   | e-  b-2:p888   | b-2 g#-2:p888   | g#-2 e-2:p888   |
}
*

// m. 244-248
CALL d_all_staccato
//    244                          245                   246                         247                           248
0:  | e+2:8 -:8+4                | -:2                 | -:8 b+  e+2 b+            | g#+2 e+2 b+2 g#+2           | e+3:4 -:8 e+3:pss    |
1:  | e+:8  -:8+4                | -:2                 | -:8 b   e+  b             | g#+  e+  b+  g#+            | e+2:4 -:8 e+2:pss    |
2:  | -:2                        | -:2                 | -:8 b   e+  b             | g#+  e+  b+  g#+            | e+:4  -:8 g#+/b+:pss |
3:  | -:8 b-  e  b-              | g#    e   b   g#    | e+  b   e+  b             | g#+  e+  b+  g#+            | e+:4  -:8 b/g#+:pss  |
4:  | -:8 b-2 e- b-2             | g#-   e-  b-  g#-   | e   b-2 e-  b-2           | g#-  e-  b-  g#-            | e:4
6:  | -:8 b-  e  b-              | g#    e   b   g#    | e   b-  e   b-            | g#   e   b   g#             | e:4
7:  | -:8 b-  e  b-              | g#    e   b   g#    | e   b   e+  b             | g#+  e+  b   g#             | e:4
8:  | -:2                        | -:2                 | -:8 b-2 e-  b-2           | g#-  e-  b-  g#-            | e:4
p:  | perc_all:8 -:8+4
10: | e-:8  -:8+4                | -:2                 | -:8 b-2:p888              | b-2:p8888                   | e-:4  -:8 e-:pss     |
11: | e:8     b-:16 b- e e b- b- | g# g# e e b b g# g# | e+:8 b:16  b  e+ e+ b  b  | g#+ g#+ e+ e+ b+ b+ g#+ g#+ | e+2:4 -:8 e+2:pss    |
12: | b-/g#:8 b-:16 b- e e b- b- | g# g# e e b b g# g# | e+:8 b:16  b  e+ e+ b  b  | g#+ g#+ e+ e+ b+ b+ g#+ g#+ | e+2:4 -:8 b/g#+:pss  |
13: | e-/e:8  b-:16 b- e e b- b- | g# g# e e b b g# g# | e+:8 b-:16 b- e  e  b- b- | g#  g#  e  e  b  b  g#  g#  | e+:4  -:8 g#/e+:pss  |
14: | e-:8  -:8+4                | -:2                 | -:8 b-2 e-  b-2           | g#-  e-  b-  g#-            | e:4   -:8 e:pss      |
15: | e-2:8 -:8+4                | -:2                 | -:8 b-3 e-2 b-3           | g#-2 e-2 b-2 g#-2           | e-:4  -:8 e-:pss     |
*

// m. 249-252
//    249                 250                       251                       252
0:  | e+3:p8888         | e+3:4    -:8. e+3:16    | e+3:4    -:8. e+2:16    | $leg e+2:2     |
1:  | e+2:p8888         | e+2:4    -:8. e+2:16    | e+2:4    -:8. e+:16     | $leg e+:2      |
2:  | g#+/b+:p8888      | g#+/b+:4 -:8. e+/g#+:16 | e+/g#+:4 -:8. g#/e+:16  | $leg g#/e+:2   |
3:  | b/g#+:p8888       | b/g#+:4  -:8. g#+/e+:16 | g#/e+:4  -:8. g#/e+:16  | $leg g#/e+:2   |
4:  | e:8 b- g#- b-     | e-:4     -:8. e-2/e-:16 | e-2/e-:4 -:8. e-2/e-:16 | $leg e-2/e-:2  |
5:  | b-/b:p8888        | b-/b:4   -:8. b-/b:16   | b-/b:4   -:8. b-:16     | $leg b-:2      |
6:  | e/g#:p8888        | e/g#:4   -:8. e/g#:16   | e/g#:4   -:8. g#-/e:16  | $leg g#-/e:2   |
7:  | g#/e+:p8888       | g#/e+:4  -:8. g#/e+:16  | g#/e+:4  -:8. e/b:16    | $leg e/b:2     |
8:  | e:8 b- g#- b-     | e-:4     -:8. e-/e:16   | e-/e:4   -:8. e-:16     | $leg e-:2      |
p:  | perc_all:perc167  | perc_all:4 -:4          | perc_all:4 -:4          | perc_all:2     |
10: | e-:p8888          | e-:4     -:8. e-:16     | e-:4     -:8. e-:16     | $leg e-:p2tr32 |
11: | e+2:p8888         | e+2:4    -:8. e+2:16    | e+2:4    -:8. g#-/e:16  | $leg g#-/e:2   |
12: | b/g#+:p8888       | b/g#+:4  -:8. b/g#+:16  | b/g#+:4  -:8. b-:16     | $leg b-:2      |
13: | g#/e+:p8888       | g#/e+:4  -:8. e/b:16    | e/b:4    -:8. g#-/e:16  | $leg g#-/e:2   |
14: | e:8  b-  g#-  b-  | e-:4     -:8. e-:16     | e-:4     -:8. e-:16     | $leg e-:2      |
15: | e-:8 b-2 g#-2 b-2 | e-2:4    -:8. e-2:16    | e-2:4    -:8. e-2:16    | $leg e-2:2     |

////////////////////////////////////////////////////////
// HELPER FUNCTIONS
////////////////////////////////////////////////////////

// functions to switch instruments between arco and pizzicato
FUNCTION i_arco_14
	INSTRUMENT  14  CELLO              Violoncello
END

FUNCTION i_pizzicato_14
	INSTRUMENT  14  PIZZICATO_STRINGS  Violoncello
END

FUNCTION i_arco_15
	INSTRUMENT  15  CONTRABASS         Double Bass
END

FUNCTION i_pizzicato_15
	INSTRUMENT  15  PIZZICATO_STRINGS  Double Bass
END

// functions for setting all channels to staccato or legato
FUNCTION d_all_staccato
	0:  $stac
	1:  $stac
	2:  $stac
	3:  $stac
	4:  $stac
	5:  $stac
	6:  $stac
	7:  $stac
	8:  $stac
	10: $stac
	11: $stac
	12: $stac
	13: $stac
	14: $stac
	15: $stac
END

FUNCTION d_all_legato
	0:  $leg
	1:  $leg
	2:  $leg
	3:  $leg
	4:  $leg
	5:  $leg
	6:  $leg
	7:  $leg
	8:  $leg
	10: $leg
	11: $leg
	12: $leg
	13: $leg
	14: $leg
	15: $leg
END

// functions for setting velocities in all channels
FUNCTION v_all_tutta_forza
	0:  $tutta_forza
	1:  $tutta_forza
	2:  $tutta_forza
	3:  $tutta_forza
	4:  $tutta_forza
	5:  $tutta_forza
	6:  $tutta_forza
	7:  $tutta_forza
	8:  $tutta_forza
	p:  $tutta_forza
	10: $tutta_forza
	11: $tutta_forza
	12: $tutta_forza
	13: $tutta_forza
	14: $tutta_forza
	15: $tutta_forza
END

FUNCTION v_all_sf
	0:  $sf
	1:  $sf
	2:  $sf
	3:  $sf
	4:  $sf
	5:  $sf
	6:  $sf
	7:  $sf
	8:  $sf
	p:  $sf
	10: $sf
	11: $sf
	12: $sf
	13: $sf
	14: $sf
	15: $sf
END

FUNCTION v_all_ff
	0:  $ff
	1:  $ff
	2:  $ff
	3:  $ff
	4:  $ff
	5:  $ff
	6:  $ff
	7:  $ff
	8:  $ff
	p:  $ff
	10: $ff
	11: $ff
	12: $ff
	13: $ff
	14: $ff
	15: $ff
END

FUNCTION v_all_f
	0:  $f
	1:  $f
	2:  $f
	3:  $f
	4:  $f
	5:  $f
	6:  $f
	7:  $f
	8:  $f
	p:  $f
	10: $f
	11: $f
	12: $f
	13: $f
	14: $f
	15: $f
END

FUNCTION v_all_p
	0:  $p
	1:  $p
	2:  $p
	3:  $p
	4:  $p
	5:  $p
	6:  $p
	7:  $p
	8:  $p
	p:  $p
	10: $p
	11: $p
	12: $p
	13: $p
	14: $p
	15: $p
END

FUNCTION v_all_pp
	0:  $pp
	1:  $pp
	2:  $pp
	3:  $pp
	4:  $pp
	5:  $pp
	6:  $pp
	7:  $pp
	8:  $pp
	p:  $pp
	10: $pp
	11: $pp
	12: $pp
	13: $pp
	14: $pp
	15: $pp
END

////////////////////////////////////
// define non-percussion patterns
////////////////////////////////////

// like the first two measures
PATTERN p_intro
	: | $ALL:4. $ALL:16 $ALL | $ALL:4. $ALL:16 $ALL |
END

// 16th 16th
PATTERN pss
	: $ALL:16 $ALL
END

// 16th 16th 16th
PATTERN psss
	: $ALL:16 $ALL $ALL
END

// 16th 16th 16th 16th
PATTERN pssss
	: $ALL:pss $ALL:pss
END

PATTERN p88
	: $ALL:8 $ALL
END

// 8th 16th 16th
PATTERN p8ss
	: $ALL:8  $ALL:16 $ALL
END

// 8th 16th 16th 8th 8th
PATTERN p8ss88
	: $ALL:p8ss $ALL:p88
END

// 8th 16th 16th 8th 16th 16th
PATTERN p8ss8ss
	: $ALL:p8ss $ALL:p8ss
END

// 8th 8th 8th 16th 16th
PATTERN p888ss
	: $ALL:p888 $ALL:pss
END

// 8th 8th 8th
PATTERN p888
	: $ALL:8 $ALL $ALL
END

// 8th (8th rest) 8th (8th rest)
PATTERN p8r8r
	: $ALL:8 - $ALL -
END

// (8th rest) 8th (8th rest) 8th
PATTERN pr8r8
	: -:8 $ALL - $ALL
END

// 8th 8th 8th 8th
PATTERN p8888
	: $ALL:p88 $ALL:p88
END

// 8th 8th 8th (8th rest)
PATTERN p888r
	: $ALL:p888 -:8
END

// 16th 16th 8th 8th
PATTERN pss88
	: $ALL:pss $ALL:p88
END

// 8th with 32th triller (8th rest) 8th with 32th triller (8th rest)
PATTERN p8r8r_tr
	{ q=2
		: (tr=/32) $ALL:8 -
	}
END

// half note with 16th triller
PATTERN p2tr16
	: (tr=/16) $ALL:2
END

PATTERN p2tr32
	: (tr=/32) $ALL:2
END

// quarter note with 16th triller
PATTERN p4tr16
	: (tr=/16) $ALL:4
END

// quarter note with 32th triller
PATTERN p4tr32
	: (tr=/32) $ALL:4
END

// 16th 16t 4th with 16th triller
PATTERN pss4tr16
	: $ALL:pss $ALL:p4tr16
END

////////////////////////////////////////////////////////////////////////////
// define percussion patterns
////////////////////////////////////////////////////////////////////////////

PATTERN perc167  // 2=to, 0/1=bd2/cc2
	: | (m,tr=32) 2:2 (q=2) 0/1:4 |
END

PATTERN perc186_to_187
	: | (m,tr=/32) 2:2 0/1:4 - $f | 0/1/2:8 -:4+8 |
END

PATTERN perc194
	: | (m,tr=/32) 2:2  0/1:4 0/1 |
END

PATTERN perc232
	: | (m,tr=/32) 2:2 (q=4) 0/1:8 |
END

PATTERN perc236
	: | (m,tr=/32) 2:2 0/1:4 - |
END
