INCLUDE inc/instruments.midica

// channel 0
0: c                                   // c:/4 (0)
0: d e:/8 f g g:/4                     // d:/4 (480)  e:/8 (960)  f:/8 (1200)  g:/8 (1440)  g:/4 (1680)
0: a b/c+/d+/e+:/1 - f+:/8 g+:4        // a:/4 (2160)  b/c+/d+/e+:/1 (2640)  -:/1 (4560)  f+:/8 (6480)  g+:/4 (6720)
{ t, s=-12
	0: c d:8                           // c-:/4t (7200)  d-:/8t (7520)
	0: c d/e - f                       // c-:/8t (7680)  d-/e-:/8t (7840)  -:/8t (8000)  f-:/8t (8160)
	0: c d e:/2                        // c-:/8t (8320)  d-:/8t (8480)  e-:/2t (8640)
	{ t=2:1, s=+12
		0: c d:8                       // c-:/2tt2:1 (9280)  d-:/8tt2:1 (9600)
		0: c d/e - f                   // c-:/8tt2:1 (9680)  d-/e-:/8tt2:1 (9760)  -:/8tt2:1 (9840)  f-:/8tt2:1 (9920)
		0: c d e:/2                    // c-:/8tt2:1 (10000)  d-:/8tt2:1 (10080)  e-:/2tt2:1 (10160)
	}
	0: c d:8                           // c-:/2t (10480)  d-:/8t (11120)
}
0: (v=64) c d:16                       // c:/8 (11280)  d:/16 (11520)


// channel 1
1: (v=64) c
{ t
	1: c:2
	{ t, q=2
		1: (v=100) c:4 (v=64)
	}
	1: c
}
1: c


// channel 2
VAR $ch     = 2
VAR $note   = c
VAR $length = /8
VAR $vel1   = 20
VAR $vel2   = 30
$ch: $note:$length $note:$length

CALL f2($ch, note=$note, length=/16) q=2
FUNCTION f2
	$[0]: ${note}:${length}
	$[0]: ${note}:${length} (v=$vel1,l=text,d=50%) d:/4 (velocity=$vel2)
	$[0]: ${note}:${length}
END


// channel 3: patterns
CHORD crd = c+/d+/e+
3: c c/d/e:pat_complex(/2,x=30) c crd:pat_complex(/4,x=40) c
PATTERN pat_complex
	0      /4
	1      /8  v=${x}
	2      /16
	0      $[0]
END


// channel 4: patterns inside of blocks in side a function call
{
	4:         // no-op command
	{
		4:     // no-op command
		CALL f4(ch=4)
	}
}
FUNCTION f4
	{
		CALL f4b(${ch}, /2, 30, /4, 40, c)
	}
END
FUNCTION f4b
	{
		{
			$[0]: c c/d/e:pat_complex($[1],x=$[2]) c crd:pat_complex($[3],x=$[4]) $[5]
		}
	}
END


// channel 5: compact patterns
CHORD cmaj         = c/d/e
CHORD cmaj_reverse = e/d/c
5: c/d/e:pat_outer(70)  c+  e/d/c:pat_outer(60)  c+  cmaj:pat_outer(50)  c+  cmaj_reverse:pat_outer(40)  c+
PATTERN pat_outer
	: (v=$[0]) 0
	: 0 1 2 2/1/0:pat_inner(/2,v1=20,v2=30)
	: 0 -:8 0
END
PATTERN pat_inner
	: (v=${v1}) 0 1 2:$[0]
	: (v=${v2}) 0 1 0:$[0]
END


// channel 6: compact cmd in a function with option, called with shift
VAR $ch    = 6
VAR $fffff = v=127
CALL f6
CALL f6 s=-12
FUNCTION f6
	$ch: (v=30) a b c (v=40) d e f
	$ch: ($fffff) a+ b+ c+
END


// channel 7: length change from inside a block
VAR $c = 7
$c:   c:8
CALL f7
FUNCTION f7
	{ q=2
		$c:  c:16 d      // c(240)  d(360) c(480) d(600)
	}
	{ q=2
		$c:  e f         // e(720)  f(840) e(960) f(1080)
	}
END


// channel 8: compact length option
VAR $c = 8
$c: (v=25,length=/4+/2) c d e         // c(0)  d(1440)  e(2880)
CALL f8
FUNCTION f8
	$c: (length=/16) f                // f(4320)
	{ q=2
		$c:  c d                      // c(4440)  d(4560) c(4680) d(4800)
	}
	$c: c:4                            // c(4920)
	{ t
		$c: c+:8 d+ e+                 // c+(5400)  d+(5560)  e+(5720)
		$c: c (length=/2) d e f        // c(5880)  (length...)  d(6040)  e(6680)  f(7320)
	}
	$c: c d:4                          // c(7960)  d(8920)
	{ t
		$c: c (length=/2) d e f        // c(9400)  (length...)  d(9720)  e(10360)  f(11000)
	}
	{
		$c: c d                        // c(11640)  d(12600)
	}
	{ t
		$c: f c/d/e:pat7 f g           // f(13560)
		                               // c(14200) d(14440) e(14680)
		                               // f(14920)  g(15560)
		$c:                            // no-op command
	}
	$c: c d                            // c(16200)  d(17160)
END
PATTERN pat7
	: 0:8 1 2
END


// channel 9
p: bd1:4                    // 0
9: bd1 bd1                  // 480 960
{ t, s=5
	p: bd1 bd1 bd1          // 1440  1760  2080
	{ t
		p: bd1 bd1 bd1      // 2400  2613  2826
		p:                  // no-op command
	}
	p: bd1 bd1 bd1          // 3039  3359  3679
}
p: bd1 bd1 bd1              // 3999  4479  4959

// no-op compact commands
0:
p:

